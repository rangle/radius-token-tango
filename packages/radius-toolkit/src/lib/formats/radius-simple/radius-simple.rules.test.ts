import { describe, expect, it } from "vitest";
import { rules } from "./radius-simple.rules";
import { ruleTestValues } from "../rules-testing.utils";

export const testValidValues = ruleTestValues<keyof typeof rules>([
  { input: "accentColor.auto" },
  { input: "animation.none" },
  { input: "animation.spin" },
  { input: "animation.ping" },
  { input: "animation.pulse" },
  { input: "animation.bounce" },
  { input: "aria.checked" },
  { input: "aria.disabled" },
  { input: "aria.expanded" },
  { input: "aria.hidden" },
  { input: "aria.pressed" },
  { input: "aria.readonly" },
  { input: "aria.required" },
  { input: "aria.selected" },
  { input: "aspectRatio.auto" },
  { input: "aspectRatio.square" },
  { input: "aspectRatio.video" },
  { input: "backdropBlur.sm" },
  { input: "backdropBrightness.sm" },
  { input: "backdropContrast.sm" },
  { input: "backdropGrayscale.sm" },
  { input: "backdropHueRotate.15" },
  { input: "backdropInvert.sm" },
  { input: "backdropOpacity.sm" },
  { input: "backdropSaturate.sm" },
  { input: "backdropSepia.sm" },
  { input: "backgroundColor.blue" },
  { input: "backgroundImage.none" },
  { input: "backgroundImage.gradientToT" },
  { input: "backgroundImage.gradientToTr" },
  { input: "backgroundImage.gradientToR" },
  { input: "backgroundImage.gradientToBr" },
  { input: "backgroundImage.gradientToB" },
  { input: "backgroundImage.gradientToBl" },
  { input: "backgroundImage.gradientToL" },
  { input: "backgroundImage.gradientToTl" },
  { input: "backgroundOpacity.sm" },
  { input: "backgroundPosition.bottom" },
  { input: "backgroundPosition.center" },
  { input: "backgroundPosition.left" },
  { input: "backgroundPosition.leftBottom" },
  { input: "backgroundPosition.leftTop" },
  { input: "backgroundPosition.right" },
  { input: "backgroundPosition.rightBottom" },
  { input: "backgroundPosition.rightTop" },
  { input: "backgroundPosition.top" },
  { input: "backgroundSize.auto" },
  { input: "backgroundSize.cover" },
  { input: "backgroundSize.contain" },
  { input: "blur.sm" },
  { input: "blur.md" },
  { input: "blur.lg" },
  { input: "blur.xl" },
  { input: "blur.2xl" },
  { input: "blur.3xl" },
  { input: "borderColor.gray200" },
  { input: "borderOpacity.sm" },
  { input: "borderRadius.none" },
  { input: "borderRadius.sm" },
  { input: "borderRadius.md" },
  { input: "borderRadius.lg" },
  { input: "borderRadius.xl" },
  { input: "borderRadius.2xl" },
  { input: "borderRadius.3xl" },
  { input: "borderRadius.full" },
  { input: "borderSpacing.md" },
  { input: "borderWidth.default" },
  { input: "borderWidth.0" },
  { input: "borderWidth.2" },
  { input: "borderWidth.4" },
  { input: "borderWidth.8" },
  { input: "boxShadow.sm" },
  { input: "boxShadow.md" },
  { input: "boxShadow.lg" },
  { input: "boxShadow.xl" },
  { input: "boxShadow.2xl" },
  { input: "boxShadow.inner" },
  { input: "boxShadow.none" },
  { input: "boxShadowColor.blue" },
  { input: "brightness.0" },
  { input: "brightness.50" },
  { input: "brightness.75" },
  { input: "brightness.90" },
  { input: "brightness.95" },
  { input: "brightness.100" },
  { input: "brightness.105" },
  { input: "brightness.110" },
  { input: "brightness.125" },
  { input: "brightness.150" },
  { input: "brightness.200" },
  { input: "caretColor.blue" },
  { input: "colors.inherit" },
  { input: "colors.current" },
  { input: "colors.transparent" },
  { input: "colors.black" },
  { input: "colors.white" },
  { input: "colors.slate" },
  { input: "colors.gray" },
  { input: "colors.zinc" },
  { input: "colors.neutral" },
  { input: "colors.stone" },
  { input: "colors.red" },
  { input: "colors.orange" },
  { input: "colors.amber" },
  { input: "colors.yellow" },
  { input: "colors.lime" },
  { input: "colors.green" },
  { input: "colors.emerald" },
  { input: "colors.teal" },
  { input: "colors.cyan" },
  { input: "colors.sky" },
  { input: "colors.blue" },
  { input: "colors.indigo" },
  { input: "colors.violet" },
  { input: "colors.purple" },
  { input: "colors.fuchsia" },
  { input: "colors.pink" },
  { input: "colors.rose" },
  { input: "columns.auto" },
  { input: "columns.1" },
  { input: "columns.2" },
  { input: "columns.3" },
  { input: "columns.4" },
  { input: "columns.5" },
  { input: "columns.6" },
  { input: "columns.7" },
  { input: "columns.8" },
  { input: "columns.9" },
  { input: "columns.10" },
  { input: "columns.11" },
  { input: "columns.12" },
  { input: "columns.3xs" },
  { input: "columns.2xs" },
  { input: "columns.xs" },
  { input: "columns.sm" },
  { input: "columns.md" },
  { input: "columns.lg" },
  { input: "columns.xl" },
  { input: "columns.2xl" },
  { input: "columns.3xl" },
  { input: "columns.4xl" },
  { input: "columns.5xl" },
  { input: "columns.6xl" },
  { input: "columns.7xl" },
  { input: "contrast.0" },
  { input: "contrast.50" },
  { input: "contrast.75" },
  { input: "contrast.100" },
  { input: "contrast.125" },
  { input: "contrast.150" },
  { input: "contrast.200" },
  { input: "cursor.auto" },
  { input: "cursor.default" },
  { input: "cursor.pointer" },
  { input: "cursor.wait" },
  { input: "cursor.text" },
  { input: "cursor.move" },
  { input: "cursor.help" },
  { input: "cursor.notAllowed" },
  { input: "cursor.none" },
  { input: "cursor.contextMenu" },
  { input: "cursor.progress" },
  { input: "cursor.cell" },
  { input: "cursor.crosshair" },
  { input: "cursor.verticalText" },
  { input: "cursor.alias" },
  { input: "cursor.copy" },
  { input: "cursor.noDrop" },
  { input: "cursor.grab" },
  { input: "cursor.grabbing" },
  { input: "cursor.allScroll" },
  { input: "cursor.colResize" },
  { input: "cursor.rowResize" },
  { input: "cursor.nResize" },
  { input: "cursor.eResize" },
  { input: "cursor.sResize" },
  { input: "cursor.wResize" },
  { input: "cursor.neResize" },
  { input: "cursor.nwResize" },
  { input: "cursor.seResize" },
  { input: "cursor.swResize" },
  { input: "cursor.ewResize" },
  { input: "cursor.nsResize" },
  { input: "cursor.neswResize" },
  { input: "cursor.nwseResize" },
  { input: "cursor.zoomIn" },
  { input: "cursor.zoomOut" },
  { input: "divideColor.blue" },
  { input: "divideOpacity.sm" },
  { input: "divideWidth.md" },
  { input: "dropShadow.sm" },
  { input: "dropShadow.md" },
  { input: "dropShadow.lg" },
  { input: "dropShadow.xl" },
  { input: "dropShadow.2xl" },
  { input: "dropShadow.none" },
  { input: "fill.none" },
  { input: "flex.1" },
  { input: "flex.auto" },
  { input: "flex.initial" },
  { input: "flex.none" },
  { input: "flexBasis.auto" },
  { input: "flexBasis.1/2" },
  { input: "flexBasis.1/3" },
  { input: "flexBasis.2/3" },
  { input: "flexBasis.1/4" },
  { input: "flexBasis.2/4" },
  { input: "flexBasis.3/4" },
  { input: "flexBasis.1/5" },
  { input: "flexBasis.2/5" },
  { input: "flexBasis.3/5" },
  { input: "flexBasis.4/5" },
  { input: "flexBasis.1/6" },
  { input: "flexBasis.2/6" },
  { input: "flexBasis.3/6" },
  { input: "flexBasis.4/6" },
  { input: "flexBasis.5/6" },
  { input: "flexBasis.1/12" },
  { input: "flexBasis.2/12" },
  { input: "flexBasis.3/12" },
  { input: "flexBasis.4/12" },
  { input: "flexBasis.5/12" },
  { input: "flexBasis.6/12" },
  { input: "flexBasis.7/12" },
  { input: "flexBasis.8/12" },
  { input: "flexBasis.9/12" },
  { input: "flexBasis.10/12" },
  { input: "flexBasis.11/12" },
  { input: "flexBasis.full" },
  { input: "flexGrow.0" },
  { input: "flexGrow.default" },
  { input: "flexShrink.0" },
  { input: "flexShrink.default" },
  { input: "fontFamily.sans" },
  { input: "fontFamily.serif" },
  { input: "fontFamily.mono" },
  { input: "fontSize.xs" },
  { input: "fontSize.sm" },
  { input: "fontSize.base" },
  { input: "fontSize.lg" },
  { input: "fontSize.xl" },
  { input: "fontSize.2xl" },
  { input: "fontSize.3xl" },
  { input: "fontSize.4xl" },
  { input: "fontSize.5xl" },
  { input: "fontSize.6xl" },
  { input: "fontSize.7xl" },
  { input: "fontSize.8xl" },
  { input: "fontSize.9xl" },
  { input: "fontWeight.thin" },
  { input: "fontWeight.extralight" },
  { input: "fontWeight.light" },
  { input: "fontWeight.normal" },
  { input: "fontWeight.medium" },
  { input: "fontWeight.semibold" },
  { input: "fontWeight.bold" },
  { input: "fontWeight.extrabold" },
  { input: "fontWeight.black" },
  { input: "gap.xs" },
  { input: "gradientColorStops.blue" },
  { input: "grayscale.0" },
  { input: "grayscale.default" },
  { input: "gridAutoColumns.auto" },
  { input: "gridAutoRows.auto" },
  { input: "gridColumn.auto" },
  { input: "gridColumn.span1" },
  { input: "gridColumn.span2" },
  { input: "gridColumn.span3" },
  { input: "gridColumn.span4" },
  { input: "gridColumn.span5" },
  { input: "gridColumn.span6" },
  { input: "gridColumn.span7" },
  { input: "gridColumn.span8" },
  { input: "gridColumn.span9" },
  { input: "gridColumn.span10" },
  { input: "gridColumn.span11" },
  { input: "gridColumn.span12" },
  { input: "gridColumn.spanFull" },
  { input: "gridColumnEnd.auto" },
  { input: "gridColumnStart.auto" },
  { input: "gridRow.auto" },
  { input: "gridRow.span1" },
  { input: "gridRow.span2" },
  { input: "gridRow.span3" },
  { input: "gridRow.span4" },
  { input: "gridRow.span5" },
  { input: "gridRow.span6" },
  { input: "gridRow.spanFull" },
  { input: "gridRowEnd.auto" },
  { input: "gridRowStart.auto" },
  { input: "gridTemplateColumns.none" },
  { input: "gridTemplateRows.none" },
  { input: "height.auto" },
  { input: "hueRotate.0" },
  { input: "inset.auto" },
  { input: "invert.0" },
  { input: "invert.default" },
  { input: "keyframes.spin" },
  { input: "keyframes.ping" },
  { input: "keyframes.pulse" },
  { input: "keyframes.bounce" },
  { input: "letterSpacing.tight" },
  { input: "letterSpacing.normal" },
  { input: "letterSpacing.wide" },
  { input: "lineHeight.none" },
  { input: "listStyleType.none" },
  { input: "listStyleType.disc" },
  { input: "listStyleType.decimal" },
  { input: "margin.auto" },
  { input: "maxHeight.full" },
  { input: "maxWidth.none" },
  { input: "maxWidth.full" },
  { input: "minHeight.full" },
  { input: "minWidth.full" },
  { input: "objectPosition.bottom" },
  { input: "opacity.100" },
  { input: "order.first" },
  { input: "outlineColor.blue" },
  { input: "padding.xs" },
  { input: "placeholderColor.blue" },
  { input: "ringColor.blue" },
  { input: "ringOffsetColor.blue" },
  { input: "ringOffsetWidth.2" },
  { input: "ringOpacity.default" },
  { input: "ringWidth.default" },
  { input: "rotate.0" },
  { input: "saturate.0" },
  { input: "scale.0" },
  { input: "screens.md" },
  { input: "scrollMargin.md" },
  { input: "sepia.default" },
  { input: "skew.0" },
  { input: "space.md" },
  { input: "spacing.2" },
  { input: "stroke.none" },
  { input: "strokeWidth.2" },
  { input: "textColor.blue" },
  { input: "textDecorationColor.blue" },
  { input: "textDecorationThickness.auto" },
  { input: "textOpacity.default" },
  { input: "textUnderlineOffset.auto" },
  { input: "translate.full" },
  { input: "width.auto" },
  { input: "willChange.auto" },
  { input: "zIndex.auto" },
]);

export const testInvalidValues = ruleTestValues<keyof typeof rules>([
  {
    input: "none.accentColor",
    errors: ["type-as-first-segment"],
  },
  {
    input: "animation",
    errors: ["min-two-segments", "dot-separation"],
  },
  {
    input: "animation.NONE.none.none",
    errors: ["lowercase-or-camelcase"],
  },
  {
    input: "animation.withOneVeryLongSegmentNameToTestTheRule",
    errors: ["length"],
  },
  {
    input: "animation.with..consecutive.dots",
    errors: ["no-consecutive-dots", "lowercase-or-camelcase", "length"],
  },
  {
    input: ".animation.with.more.dots.and.lots.of.errors",
    errors: [
      "no-leading-or-trailing-dots",
      "type-as-first-segment",
      "lowercase-or-camelcase",
      "length",
    ],
  },
]);

describe("test rules: radius-simple", () => {
  it("should have a valid rule set", () => {
    expect(rules).toBeTruthy();
    const ruleEntries = Object.entries(rules);
    expect(ruleEntries).toHaveLength(7);
  });

  testValidValues(rules);
  testInvalidValues(rules);
});
